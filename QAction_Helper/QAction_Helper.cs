// <auto-generated>This is auto-generated code by DIS. Do not modify.</auto-generated>
using System.ComponentModel;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

namespace Skyline.DataMiner.Scripting
{
public static class Parameter
{
	public class Write
	{
		/// <summary>PID: 4 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int forcepolldata_4 = 4;
		/// <summary>PID: 4 | Type: write</summary>
		public const int forcepolldata = 4;
	}
	public class Transportstreamsoverview
	{
		/// <summary>PID: 100</summary>
		public const int tablePid = 100;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 101</summary>
		public const int indexColumnPid = 101;
		public class Pid
		{
			/// <summary>PID: 101 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int transportstreamsoverviewinstance_101 = 101;
			/// <summary>PID: 101 | Type: read</summary>
			public const int transportstreamsoverviewinstance = 101;
			/// <summary>PID: 102 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int transportstreamsoverviewname_102 = 102;
			/// <summary>PID: 102 | Type: read</summary>
			public const int transportstreamsoverviewname = 102;
			/// <summary>PID: 103 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int transportstreamsoverviewmulticast_103 = 103;
			/// <summary>PID: 103 | Type: read</summary>
			public const int transportstreamsoverviewmulticast = 103;
			/// <summary>PID: 104 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int transportstreamsoverviewnetworkid_104 = 104;
			/// <summary>PID: 104 | Type: read</summary>
			public const int transportstreamsoverviewnetworkid = 104;
			/// <summary>PID: 105 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int transportstreamsoverviewnumberofservices_105 = 105;
			/// <summary>PID: 105 | Type: read</summary>
			public const int transportstreamsoverviewnumberofservices = 105;
			/// <summary>PID: 106 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int transportstreamsoverviewlastpoll_106 = 106;
			/// <summary>PID: 106 | Type: read</summary>
			public const int transportstreamsoverviewlastpoll = 106;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int transportstreamsoverviewinstance_101 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int transportstreamsoverviewinstance = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int transportstreamsoverviewname_102 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int transportstreamsoverviewname = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int transportstreamsoverviewmulticast_103 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int transportstreamsoverviewmulticast = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int transportstreamsoverviewnetworkid_104 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int transportstreamsoverviewnetworkid = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int transportstreamsoverviewnumberofservices_105 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int transportstreamsoverviewnumberofservices = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int transportstreamsoverviewlastpoll_106 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int transportstreamsoverviewlastpoll = 5;
		}
	}
}
public class WriteParameters
{
	/// <summary>PID: 4  | Type: write | DISCREETS: Force Poll = 1</summary>
	public System.Object Forcepolldata {get { return Protocol.GetParameter(4); }set { Protocol.SetParameter(4, value); }}
	public SLProtocolExt Protocol;
	public WriteParameters(SLProtocolExt protocol)
	{
		Protocol = protocol;
	}
}
public interface SLProtocolExt : SLProtocol
{
	/// <summary>PID: 100</summary>
	TransportstreamsoverviewQActionTable transportstreamsoverview { get; set; }
	object Afterstartup_dummy { get; set; }
	object Dummyparamfortriggeringqaction_dummy { get; set; }
	object Forcepolldata_4 { get; set; }
	object Forcepolldata { get; set; }
	object Transportstreamsoverviewinstance_101 { get; set; }
	object Transportstreamsoverviewinstance { get; set; }
	object Transportstreamsoverviewname_102 { get; set; }
	object Transportstreamsoverviewname { get; set; }
	object Transportstreamsoverviewmulticast_103 { get; set; }
	object Transportstreamsoverviewmulticast { get; set; }
	object Transportstreamsoverviewnetworkid_104 { get; set; }
	object Transportstreamsoverviewnetworkid { get; set; }
	object Transportstreamsoverviewnumberofservices_105 { get; set; }
	object Transportstreamsoverviewnumberofservices { get; set; }
	object Transportstreamsoverviewlastpoll_106 { get; set; }
	object Transportstreamsoverviewlastpoll { get; set; }
	WriteParameters Write { get; set; }
}
public class ConcreteSLProtocolExt : ConcreteSLProtocol, SLProtocolExt
{
	/// <summary>PID: 100</summary>
	public TransportstreamsoverviewQActionTable transportstreamsoverview { get; set; }
	/// <summary>PID: 2  | Type: dummy</summary>
	public System.Object Afterstartup_dummy {get { return GetParameter(2); }set { SetParameter(2, value); }}
	/// <summary>PID: 3  | Type: dummy</summary>
	public System.Object Dummyparamfortriggeringqaction_dummy {get { return GetParameter(3); }set { SetParameter(3, value); }}
	/// <summary>PID: 4  | Type: write | DISCREETS: Force Poll = 1</summary>
	public System.Object Forcepolldata_4 {get { return GetParameter(4); }set { SetParameter(4, value); }}
	/// <summary>PID: 4  | Type: write | DISCREETS: Force Poll = 1</summary>
	public System.Object Forcepolldata {get { return Write.Forcepolldata; }set { Write.Forcepolldata = value; }}
	/// <summary>PID: 101  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Transportstreamsoverviewinstance_101 {get { return GetParameter(101); }set { SetParameter(101, value); }}
	/// <summary>PID: 101  | Type: read</summary>
	public System.Object Transportstreamsoverviewinstance {get { return GetParameter(101); }set { SetParameter(101, value); }}
	/// <summary>PID: 102  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Transportstreamsoverviewname_102 {get { return GetParameter(102); }set { SetParameter(102, value); }}
	/// <summary>PID: 102  | Type: read</summary>
	public System.Object Transportstreamsoverviewname {get { return GetParameter(102); }set { SetParameter(102, value); }}
	/// <summary>PID: 103  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Transportstreamsoverviewmulticast_103 {get { return GetParameter(103); }set { SetParameter(103, value); }}
	/// <summary>PID: 103  | Type: read</summary>
	public System.Object Transportstreamsoverviewmulticast {get { return GetParameter(103); }set { SetParameter(103, value); }}
	/// <summary>PID: 104  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Transportstreamsoverviewnetworkid_104 {get { return GetParameter(104); }set { SetParameter(104, value); }}
	/// <summary>PID: 104  | Type: read</summary>
	public System.Object Transportstreamsoverviewnetworkid {get { return GetParameter(104); }set { SetParameter(104, value); }}
	/// <summary>PID: 105  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Transportstreamsoverviewnumberofservices_105 {get { return GetParameter(105); }set { SetParameter(105, value); }}
	/// <summary>PID: 105  | Type: read</summary>
	public System.Object Transportstreamsoverviewnumberofservices {get { return GetParameter(105); }set { SetParameter(105, value); }}
	/// <summary>PID: 106  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Transportstreamsoverviewlastpoll_106 {get { return GetParameter(106); }set { SetParameter(106, value); }}
	/// <summary>PID: 106  | Type: read</summary>
	public System.Object Transportstreamsoverviewlastpoll {get { return GetParameter(106); }set { SetParameter(106, value); }}
	public WriteParameters Write { get; set; }
	public ConcreteSLProtocolExt()
	{
		transportstreamsoverview = new TransportstreamsoverviewQActionTable(this, 100, "transportstreamsoverview");
		Write = new WriteParameters(this);
	}
}
/// <summary>IDX: 0</summary>
public class TransportstreamsoverviewQActionTable : QActionTable, IEnumerable<TransportstreamsoverviewQActionRow>
{
	public TransportstreamsoverviewQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<TransportstreamsoverviewQActionRow> GetEnumerator() { return new QActionTableEnumerator<TransportstreamsoverviewQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class TransportstreamsoverviewQActionRow : QActionTableRow
{
	/// <summary>PID: 101 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Transportstreamsoverviewinstance_101 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 101 | Type: read</summary>
	public System.Object Transportstreamsoverviewinstance { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 102 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Transportstreamsoverviewname_102 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 102 | Type: read</summary>
	public System.Object Transportstreamsoverviewname { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 103 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Transportstreamsoverviewmulticast_103 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 103 | Type: read</summary>
	public System.Object Transportstreamsoverviewmulticast { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 104 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Transportstreamsoverviewnetworkid_104 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 104 | Type: read</summary>
	public System.Object Transportstreamsoverviewnetworkid { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 105 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Transportstreamsoverviewnumberofservices_105 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 105 | Type: read</summary>
	public System.Object Transportstreamsoverviewnumberofservices { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 106 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Transportstreamsoverviewlastpoll_106 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 106 | Type: read</summary>
	public System.Object Transportstreamsoverviewlastpoll { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	public TransportstreamsoverviewQActionRow() : base(0, 6) { }
	public TransportstreamsoverviewQActionRow(System.Object[] oRow) : base(0, 6, oRow) { }
	public static implicit operator TransportstreamsoverviewQActionRow(System.Object[] source) { return new TransportstreamsoverviewQActionRow(source); }
	public static implicit operator System.Object[](TransportstreamsoverviewQActionRow source) { return source.ToObjectArray(); }
}
}
